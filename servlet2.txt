Web application and Web Resource program execution
===================================================
Java program will execute manually.

Web application and web resource program will execute when we give the request.

Diagram: servlet2.1

With respect to the diagram
---------------------------
1) Enduser gives the request to web resource program.

2) Webserver traps that request and passes that request to appropriate web resource program.

3) Web resource program will execute the logic to process the request.

4) Web resource program communicates with database software if neccessary.

5) Web resource program gives output to web server.

6) Web server send the output to browser window as dynamic response.

Note:
-----
The process of keeping the application in a server is called deployment and reverse is called undeployment.


Web Server 
===========
It is a installable software which is used to automate whole process of web application and web resource program execution.
ex:
	Tomcat, Resin  and etc.

Responsibilities of web server
-------------------------------
1) It takes contineous request from client.

2) It pass the request to appropriate web resource program. 

3) It provides environment to deploy and undeploy the web application.

4) It allows client side web resource programs to execute in a browser window.

5) It will add middleware services only to deployed web applications.

6) It gather the result and send to browser window as dynamic response.

7) It is used to automate whole process of web application and web resource program execution.

To execute java program we required JRE/JVM.

To execute servlet program we required servlet container.

To execute jsp program we required jsp container.


Web Container
==============
A web container is a software application or a program which is used to manage whole life cycle of web resource program i.e from birth to death.

Servlet container manage whole life cycle of servlet program.

JSP container manage whole life cycle of jsp program.

Some part of industry consider servlet container and jsp container are web containers.

Every server is designed to support servlet container and jsp container. So we don't need to arrange it seperately.


Tomcat 
========

Version			:	9.x 

Creator			:	James Duncan Davidson

Vendor			:	Apache Software Foundation

Website			:	https://tomcat.apache.org

Port No			: 	8080

Servlet container	:	Catalina 

Jsp container		:	Jasper 

Download link		:

https://drive.google.com/file/d/1u547booDvVY630rN4drEQ8c8lU0In7T6/view?usp=drive_link


Tomcat is not a container. It is a server containing servlet container and jsp container.


Tomcat installation describes four things.

1) Http Connector port 

2) Adminstrator username and password 

3) JDK location 

4) Tomcat installation location 


Tomcat installation
------------------
Double click to Tomcat software --> yes --> Next --> I Agree --> select Full --> Next --->
Http Connector port : 8080

adminstrator username : admin 
	     password : admin  --> Next --> Next --> Install.


How to setup tomcat server to manual mode
------------------------------------------
goto services --> click to  apache tomcat --> click to stop link --> double click to apache tomcat
---> startup type : manual --> apply --> ok. 
	


Servlet
========
Servlet is a dynamic web resource program which enhanced the funcationality of web server or application server.

or 

Servlet is a java based dynamic web resource program which is used to generate dynamic web pages.

or 

Servlet is a single instance multithread java based web resource program which is used to develop web applications.

Diagram: servlet2.2



Servlet API
===========
API is a collection of packages.

ex:
	javax.servlet 
	javax.servlet.http 


Servlet important terminologies
===============================
javax.servlet.Servlet(I)
	|
	|
javax.servelt.GenericServlet(AC)
	|
	|
javax.servlet.http.HttpServlet(C)


First web application development having servlet program as web resource program
================================================================================
Diagram: servlet2.3

Deployment Directory Structure
-----------------------------
DateApp
|
|---Java Resources
	|
	|------src
		|
		|---com.ihub.www
			|
			|---DateSrv.java

|---WebContent
	|
	|------WEB-INF
		|
		|---web.xml 

Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

step1:
-----
	Launch eclipse IDE by choosing workspace location.


step2:
-----
	Create a dynamic web project i.e DateApp.
	ex:
		File --> New --> Dynamic web project --> Project Name : DateApp
		---> Next --> Next --> select generate web.xml file --> Finish.

step3:
------
	Add "servlet-api.jar" file in project build path.
	ex:
		right click to DateApp --> Build path --> configure build path -->
		libraries --> click to classpath --> Add external jars --> 
		select servlet-api.jar file --> open --> Apply & close.

step4:
-----
	Add Tomcat9 server to eclipse IDE.
	ex:
		window --> preferences --> server --> Runtime Environments -->
		click to add button --> select Apache Tomcat 9 --> Next -->
		select destination folder --> Finish --> apply and close.

step5:
-----
	Create a "com.ihub.www" package inside "JavaResources/src" folder.	

	ex:	
		right click to src folder --> new --> package --> Name : com.ihub.www --> Finish.

step6:
-----
	Create a DateSrv.java file inside "com.ihub.www" package.
	ex:
		right click to com.ihub.www package --> new --> class --> Name : DateSrv -->
		Finish.

DateSrv.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Date;

import javax.servlet.GenericServlet;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class DateSrv extends GenericServlet
{
	public void service(ServletRequest req,ServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		Date d=new Date();
		
		pw.println("<center><h1>Current Date and Time <br> "+d+" </h1></center>");
		
		pw.close();
	}
}

step7:
------
	Configure each servlet program in web.xml file.

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  		<servlet-name>DateSrv</servlet-name>
  		<servlet-class>com.ihub.www.DateSrv</servlet-class>
  </servlet>
  <servlet-mapping>
  		<servlet-name>DateSrv</servlet-name>
  		<url-pattern>/test</url-pattern>	
  </servlet-mapping>
  
</web-app>

step8:
-----
	Run dynamic web project.
	ex:
		right click to DateApp --> run as --> run on server --> select Apache Tomcat 9
		--> next --> Finish.


step9:
------
	Test the application by using below request url.
	ex:
		http://localhost:2525/DateApp/test

Note:
-----	
	If we do any mistake in web.xml file then we will get 404 Error.
	If we do any mistak in servlet program the nwe will get 500 Error.





























