Types of url patterns
======================
Url pattern will hide servlet name, technology name from the outsider for security reason.

Our client, other web resource programs and web server will recognize each servlet program by using url pattern.

We have three types of url patterns.

1) Exact match url pattern 

2) Directory match url pattern 

3) Extension match url pattern 

Every server is designed to support above three url patterns.


1) Exact match url pattern 
--------------------------
It starts with '/' symbol followed by a name.

ex:
	web.xml 
	--------
		<url-pattern>/test</url-pattern>


	Request url
	-----------
		http://localhost:2525/DateApp/test      // valid 
		http://localhost:2525/DateApp/best      // invalid 
		http://localhost:2525/DateApp/x/test    // invalid 
	
2) Directory match url pattern 
---------------------------
It starts with '/' symbol and ends with '*' symbol.

ex:
	web.xml
	-------
		<url-pattern>/x/y/*</url-pattern>

	Request url
	----------
		http://localhost:2525/DateApp/x/y/z   		// valid 
		http://localhost:2525/DateApp/x/y/z/test	// valid 
		http://localhost:2525/DateApp/y/x/z		// invalid 


3) Extension match url pattern 
------------------------------
It starts with '*' symbol having some extension.

ex:
	web.xml
	-------
		<url-pattern>*.do</url-pattern>

	Request url
	-----------
		http://localhost:2525/DateApp/temp	// invalid 
		http://localhost:2525/DateApp/temp.do	// valid 
		http://localhost:2525/DateApp/x/y/z.do	// valid 


MIME Types
==========
MIME stands for Multipurpose Internet Mail Extension.

MIME describes in how many formats we can display the output in servlets.

There are four ways to display the outputs in servlets.

1) text/html 
------------
	It is used to display the output in html format.

2) text/xml 
----------
	It is used to display the output in xml format.

3) application/ms-word
--------------------
	It is used to display the output in word format.

4) application/vnd.ms-excel 
-------------------------
	It is used to display the output in excel format.


Deployment Directory Structure
-------------------------------
MIMEApp
|
|---Java Resources
	|
	|------src
		|
		|---com.ihub.www
			|
			|---TestSrv1.java
			|---TestSrv2.java
			|---TestSrv3.java
			|---TestSrv4.java
|
|---WebContent 
	|
	|------WEB-INF
		|
		|---web.xml 
Note:
----
In above application we need to add "servlet-api.jar" file in project build path.

TestSrv1.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.GenericServlet;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class TestSrv1 extends GenericServlet
{
	public void service(ServletRequest req,ServletResponse res)throws ServletException,IOException 
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		pw.println("<table border='1'>");
		pw.println("<tr><th>No</th><th>Name</th><th>Address</th></tr>");
		pw.println("<tr><td>101</td><td>Alan</td><td>Florida</td></tr>");
		pw.println("<tr><td>102</td><td>Jose</td><td>Texas</td></tr>");
		pw.println("<tr><td>103</td><td>Mark</td><td>Vegas</td></tr>");
		pw.println("</table>");
		
		pw.close();
	}
}

TestSrv2.java
--------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.GenericServlet;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class TestSrv2 extends GenericServlet
{
	public void service(ServletRequest req,ServletResponse res)throws ServletException,IOException 
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/xml");
		
		pw.println("<table border='1'>");
		pw.println("<tr><th>No</th><th>Name</th><th>Address</th></tr>");
		pw.println("<tr><td>101</td><td>Alan</td><td>Florida</td></tr>");
		pw.println("<tr><td>102</td><td>Jose</td><td>Texas</td></tr>");
		pw.println("<tr><td>103</td><td>Mark</td><td>Vegas</td></tr>");
		pw.println("</table>");
		
		pw.close();
	}
}

TestSrv3.java
---------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.GenericServlet;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class TestSrv3 extends GenericServlet
{
	public void service(ServletRequest req,ServletResponse res)throws ServletException,IOException 
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("application/ms-word");
		
		pw.println("<table border='1'>");
		pw.println("<tr><th>No</th><th>Name</th><th>Address</th></tr>");
		pw.println("<tr><td>101</td><td>Alan</td><td>Florida</td></tr>");
		pw.println("<tr><td>102</td><td>Jose</td><td>Texas</td></tr>");
		pw.println("<tr><td>103</td><td>Mark</td><td>Vegas</td></tr>");
		pw.println("</table>");
		
		pw.close();
	}
}

TestSrv4.java
---------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.GenericServlet;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class TestSrv4 extends GenericServlet
{
	public void service(ServletRequest req,ServletResponse res)throws ServletException,IOException 
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("application/vnd.ms-excel");
		
		pw.println("<table border='1'>");
		pw.println("<tr><th>No</th><th>Name</th><th>Address</th></tr>");
		pw.println("<tr><td>101</td><td>Alan</td><td>Florida</td></tr>");
		pw.println("<tr><td>102</td><td>Jose</td><td>Texas</td></tr>");
		pw.println("<tr><td>103</td><td>Mark</td><td>Vegas</td></tr>");
		pw.println("</table>");
		
		pw.close();
	}
}

Note:
-----
If a web application contains four servlet programs then each servlet program we need to configure in web.xml file using multiple <servlet> and <servlet-mapping> tags.

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  		<servlet-name>TestSrv1</servlet-name>
  		<servlet-class>com.ihub.www.TestSrv1</servlet-class> 
  </servlet>
  <servlet-mapping>
  		<servlet-name>TestSrv1</servlet-name>
  		<url-pattern>/html</url-pattern>
  </servlet-mapping> 
  
  <servlet>
  		<servlet-name>TestSrv2</servlet-name>
  		<servlet-class>com.ihub.www.TestSrv2</servlet-class> 
  </servlet>
  <servlet-mapping>
  		<servlet-name>TestSrv2</servlet-name>
  		<url-pattern>/xml</url-pattern>
  </servlet-mapping> 
  
  <servlet>
  		<servlet-name>TestSrv3</servlet-name>
  		<servlet-class>com.ihub.www.TestSrv3</servlet-class> 
  </servlet>
  <servlet-mapping>
  		<servlet-name>TestSrv3</servlet-name>
  		<url-pattern>/word</url-pattern>
  </servlet-mapping> 
  
  <servlet>
  		<servlet-name>TestSrv4</servlet-name>
  		<servlet-class>com.ihub.www.TestSrv4</servlet-class> 
  </servlet>
  <servlet-mapping>
  		<servlet-name>TestSrv4</servlet-name>
  		<url-pattern>/excel</url-pattern>
  </servlet-mapping> 

</web-app>

Request url
------------
	http://localhost:2525/MIMEApp/html 
	http://localhost:2525/MIMEApp/xml 
	http://localhost:2525/MIMEApp/word
	http://localhost:2525/MIMEApp/excel 



Types of communication
======================
We can communicate to servlet program in three ways.

1) Browser to servlet communication 

2) HTML to servlet communication 

3) Servlet to servlet communication 

In browser to servlet communication we need to type our request url in browser address bar. But typing request url in browser address bar is quit complex. 

To overcome this limitation we need to HTML to servlet communication.

In HTML to servlet communication we can give the request to servlet program via HTML based hyperlinks and form pages.

In HTML based hyperlink to servlet communication we need to type our request url as href url.
ex:
	<a href="http://localhost:2525/MIMEApp/html"> click here </a>

In HTML based form page to servlet communication we need to type our request url as action url.
ex:
	<form action="http://localhost:2525/MIMEApp/html">
		-
		-
		-
	</form>

A request which is generated by using hyperlink does not carry the data.

A request which is generated by using form page will carry the data.


Example application on HTML based hyperlink to servlet communication
=====================================================================
Diagram: servlet3.1

Deployment Directory Structure
-------------------------------
WishApp
|
|---Java Resources
	|
	|------src
		|
		|---com.ihub.www
			|
			|---WishSrv.java
|---WebContent 
	|
	|------index.html 
	|
	|------WEB-INF
		|
		|---web.xml 
Note:
----
In above application we need to add "servlet-api.jar" file in project build path.


It is never recommanded to extends a class with GenericServlet class because it won't give HTTP protocol features.

It is always recommanded to extends a class with HttpServlet class because it gives HTTP protocol features.

index.html
-----------
<center>
	<h1>
		<a href="test"> getMsg </a>
	</h1>
</center>

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>WishSrv</servlet-name>
  	<servlet-class>com.ihub.www.WishSrv</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>WishSrv</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
  	<welcome-file>index.html</welcome-file>
  </welcome-file-list>
  
</web-app>

WishSrv.java
-------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Calendar;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class WishSrv extends HttpServlet 
{
	public void service(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		Calendar c=Calendar.getInstance();
		int h=c.get(Calendar.HOUR_OF_DAY);
		
		if(h<12)
			pw.println("<center><h1>Good Morning</h1></center>");
		else if(h<16)
			pw.println("<center><h1>Good Afternoon</h1></center>");
		else if(h<20)
			pw.println("<center><h1>Good Evening</h1></center>");
		else
			pw.println("<center><h1>Good Night</h1></center>");
		
		pw.close();
	}
}

Request url
-----------
	http://localhost:2525/WishApp/






















	

































































