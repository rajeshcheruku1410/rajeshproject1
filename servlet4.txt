Example application on HTML based form page to servlet communication
====================================================================
Diagram: servlet4.1

Deployment Directory structure
------------------------------
VoteApp
|
|---Java Resources
	|
	|-----src
		|
		|---com.ihub.www
			|
			|---VoteSrv.java
|
|---WebContent
	|
	|---form.html	
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

We can communicate to servlet program in two methodologies.

1) GET methodology 
-----------------
	It will carry limited amount of data.

2) POST methodology 
----------------
	It will carry unlimited amount of data.


While working HttpServlet class , it is never recommanded to use service(-,-) method because it is not designed according to HTTP protocol features.

It is always recommanded to use doXxx(-,-) methods because they designed according to HTTP protocol features.

We have seven doXxx(-,-) methods as given below.
ex:
	doGet(-,-)
	doPost(-,-)
	doPut(-,-)
	doDelete(-,-)
	doOption(-,-)
	doTrace(-,-)
	doHead(-,-)

Prototype of doXxx(-,-) method
-------------------------------
protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException 
{

}

form.html
---------
<form action="test" method="GET">

	Name: <input type="text" name="t1"/> <br>
	
	Age: <input type="text" name="t2"/> <br>
	
	<input type="submit" value="vote"/>	

</form>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">

	<servlet>
		<servlet-name>VoteSrv</servlet-name>
		<servlet-class>com.ihub.www.VoteSrv</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>VoteSrv</servlet-name>
		<url-pattern>/test</url-pattern>
	</servlet-mapping>
	
	<welcome-file-list>
		<welcome-file>form.html</welcome-file>
	</welcome-file-list>

</web-app>

VoteSrv.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class VoteSrv extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data 
		String name = req.getParameter("t1");
		String sage = req.getParameter("t2");
		
		//converting string age to int age
		int age = Integer.parseInt(sage);
		
		if(age<18)
			pw.println("<center><h1 style='color:red;'>"+name+" U r not eligible to vote</h1></center>");
		else
			pw.println("<center><h1 style='color:green;'>"+name+" U r eligible to vote </h1></center>");
	
		pw.close();
	}
}


Request url
----------
	http://localhost:2525/VoteApp/

Servlet to Database Communication
=================================
Diagram: servlet4.2

Deployment Directory Structure
------------------------------
DBApp
|
|---Java Resources
	|
	|-------src
		|
		|---com.ihub.www
			|
			|---DBSrv.java
|
|---WebContent
	|
	|---form.html
	|
	|---WEB-INF
		|
		|-----web.xml 
		|-----lib
			|
			|--ojdbc14.jar
Note:
----
In above application we need to add "servlet-api.jar" and "ojdbc14.jar" file in project build path.

Copy and paste "ojdbc14.jar" file inside "WEB-INF/lib" folder separetly.


student table
---------------
drop table student;

create table student(sno number(3),sname varchar2(10), sadd varchar2(12));


form.html
---------


<form action="test" method="GET">

	<table align="center">
		
		<tr>
			<td>No:</td>
			<td><input type="text" name="t1"/></td>
		</tr>
		
		<tr>
			<td>Name:</td>
			<td><input type="text" name="t2"/></td>
		</tr>
		
		<tr>
			<td>Address:</td>
			<td><input type="text" name="t3"/></td>
		</tr>
		
		<tr>
			<td><input type="reset" value="reset"/></td>
			<td><input type="submit" value="submit"/></td>
		</tr>
	
	</table>

</form>


web.xml
----------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>DBSrv</servlet-name>
  	<servlet-class>com.ihub.www.DBSrv</servlet-class>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>DBSrv</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

DBSrv.java
-----------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class DBSrv extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data 
		String sno=req.getParameter("t1");
		int no=Integer.parseInt(sno);
		String name = req.getParameter("t2");
		String add = req.getParameter("t3");
		
		//insert data into database
		Connection con=null;
		PreparedStatement ps=null;
		String qry=null;
		int result=0;
		try
		{
			Class.forName("oracle.jdbc.driver.OracleDriver");
			con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
			qry="insert into student values(?,?,?)";
			ps=con.prepareStatement(qry);
			//set the values
			ps.setInt(1, no);
			ps.setString(2, name);
			ps.setString(3, add);
			//execute 
			result=ps.executeUpdate();
			if(result==0)
				pw.println("<center><h1>No Record Inserted</h1></center>");
			else
				pw.println("<center><h1>Record Inserted</h1></center>");
			
			ps.close();
			con.close();
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		
		pw.close();
	}
}

Request url
----------
	http://localhost:2525/DBApp/





































